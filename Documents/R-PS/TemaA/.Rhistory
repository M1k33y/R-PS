estesubf=mean(y<=f(x))\
#problema 1
f=function(x)-2*x^2+5*x-2
arie2=integrate(f,0,2)$value
#arie exacta prin integrare
x= runif(10000,0,2)
y= runif(10000,0,max(f(x)))
#iau y pana la vf sa acopar tot graficul de sub
estesubf=mean(y<=f(x))
#verific ca toate sa fie sub
arie1=2*max(f(x))*estesubf
#arie aprox
eroare=abs(arie2-arie1)/arie2
print(arie1)
print(arie2)
print(eroare)
#punct b
f= function(x)exp(x)
val1=integrate(f,1,4)$value
x=seq(1,4,length.out=10001)
y=f(x)
val2=(4-1)/20000*(sum(y)-y[1]-y[10000+1]+2*sum(y[2:10000]))
abs_err=abs(val1-val2)
rel_err=abs_err/val1*100
print(val1)
print(val2)
print(abs_err)
print(rel_err)
#ex 2.2
f=function(x) exp(-2*x^2)
lambda=3
N=50000
x=rexp(N,lambda)
val_aprox=sum(f(x))/(lambda*N)
val_exact=sqrt(pi/8)
err=abs(val_aprox-val_exact)
print(val_exact)
print(val_aprox)
print(err)
#problma mecanici
l1=4
l2=12
p1=1/4
p2=3/4
N=10000
s=0
for (i in 1:N)
{
x=p1*rexp(1,l1)+p2*rexp(1,l2)
s=s+x
}
expect=s/N
print(expect)
#4.1
runs <- 1000000
# Simulare variabile X și Y
X <- rgeom(runs, 0.3)
Y <- rgeom(runs, 0.5)
# Calculam probabilitatea cerută
prob <- mean(X < Y^2)
cat("Estimarea probabilitatii P(X < Y^2):", prob, "\n")
# Eroarea dorită
error <- 0.005
# Calculăm numărul de simulări necesare pentru a obține eroarea dorită
while(TRUE) {
X <- rgeom(runs, 0.3)
Y <- rgeom(runs, 0.5)
prob <- mean(X < Y^2)
se <- sqrt(prob*(1-prob)/runs)
if(1.96 * se <= error) {
break
}
runs <- runs * 2
}
cat("Numarul de simulări necesare:", runs, "\n")
cat("Eroarea estimată:", 1.96 * se, "\n")
#4.1
runs <- 1000000
#simulare var
X <- rgeom(runs, 0.3)
Y <- rgeom(runs, 0.5)
#prob ceruta
prob <- mean(X < Y^2)
cat("Estimarea probabilitatii P(X < Y^2):", prob, "\n")
#erroare
error <- 0.005
#nr de sim
while(TRUE) {
X <- rgeom(runs, 0.3)
Y <- rgeom(runs, 0.5)
prob <- mean(X < Y^2)
se <- sqrt(prob*(1-prob)/runs)
if(1.96 * se <= error) {
break
}
runs <- runs * 2
}
print("Nr de sim necesare:", runs, "\n")
#problema 1
f=function(x)-2*x^2+5*x-2
arie2=integrate(f,0,2)$value
#arie exacta prin integrare
x= runif(10000,0,2)
y= runif(10000,0,max(f(x)))
#iau y pana la vf sa acopar tot graficul de sub
estesubf=mean(y<=f(x))
#verific ca toate sa fie sub
arie1=4*max(f(x))*estesubf
#arie aprox
eroare=abs(arie2-arie1)/arie2
print(arie1)
print(arie2)
print(eroare)
#problema 1
f=function(x)-2*x^2+5*x-2
arie2=integrate(f,0,2)$value
#arie exacta prin integrare
x= runif(10000,0,2)
y= runif(10000,0,max(f(x)))
#iau y pana la vf sa acopar tot graficul de sub
estesubf=mean(y<=f(x))
#verific ca toate sa fie sub
arie1=4*max(f(x))*estesubf
#arie aprox
eroare=abs(arie2-arie1)/arie2
print(arie1)
print(arie2)
print(eroare)
#problema 1
f=function(x)-2*x^2+5*x-2
arie2=integrate(f,0,2)$value
#arie exacta prin integrare
x= runif(10000,0,2)
y= runif(10000,0,max(f(x)))
#iau y pana la vf sa acopar tot graficul de sub
estesubf=mean(y<=f(x))
#verific ca toate sa fie sub
arie1=2*max(f(x))*estesubf
#arie aprox
eroare=abs(arie2-arie1)/arie2
print(arie1)
print(arie2)
print(eroare)
#problma mecanici
l1=4
l2=12
p1=1/4
p2=3/4
N=10000
s=0
for (i in 1:N)
{
x=p1*rexp(1,l1)+p2*rexp(1,l2)
s=s+x
}
expect=s/N
print(expect)
#problema 1
f=function(x)-2*x^2+5*x-2
arie2=integrate(f,0,2)$value
#arie exacta prin integrare
x= runif(10000,0,2)
y= runif(10000,0,max(f(x)))
#iau y pana la vf sa acopar tot graficul de sub
estesubf=mean(y<=f(x))
#verific ca toate sa fie sub
arie1=2*max(f(x))*estesubf
#arie aprox
eroare=abs(arie2-arie1)/arie2
print(arie1)
print(arie2)
print(eroare)
#problema 1
f=function(x)-2*x^2+5*x-2
arie2=integrate(f,1/2,2)$value
#arie exacta prin integrare
x= runif(10000,0,2)
y= runif(10000,0,max(f(x)))
#iau y pana la vf sa acopar tot graficul de sub
estesubf=mean(y<=f(x))
#verific ca toate sa fie sub
arie1=2*max(f(x))*estesubf
#arie aprox
eroare=abs(arie2-arie1)/arie2
print(arie1)
print(arie2)
print(eroare)
#ex 2.2
f=function(x) exp(-2*x^2)
lambda=3
N=50000
x=rexp(N,lambda)
val_aprox=sum(f(x))/(lambda*N)
val_exact=sqrt(pi/8)
err=abs(val_aprox-val_exact)
print(val_exact)
print(val_aprox)
print(err)
#problma mecanici
l1=4
l2=12
p1=1/4
p2=3/4
N=10000
s=0
for (i in 1:N)
{
x=p1*rexp(1,l1)+p2*rexp(1,l2)
s=s+x
}
expect=s/N
print(expect)
#4.1
runs <- 1000000
#simulare var
X <- rgeom(runs, 0.3)
Y <- rgeom(runs, 0.5)
#prob ceruta
prob <- mean(X < Y^2)
cat("Estimarea probabilitatii P(X < Y^2):", prob, "\n")
#erroare
error <- 0.005
#nr de sim
while(TRUE) {
X <- rgeom(runs, 0.3)
Y <- rgeom(runs, 0.5)
prob <- mean(X < Y^2)
se <- sqrt(prob*(1-prob)/runs)
if(1.96 * se <= error) {
break
}
runs <- runs * 2
}
cat("Nr de sim necesare:", runs, "\n")
cat("Err estim:", 1.96 * se, "\n")
n <- 100000
x <- rgeom(n, 0.3)
y <- rgeom(n, 0.5)
p <- mean(x > y^2)
n <- 100
error <- 1
while (error > 0.005) {
x <- c(x, rgeom(n, 0.3))
y <- c(y, rgeom(n, 0.5))
p_new <- mean(x > y^2)
error <- qnorm(0.975)*sqrt(p_new*(1-p_new)/length(x))
n <- n + 100
}
cat("Estimated probability:", p, "\n")
cat("Number of runs:", length(x), "\n")
#problma mecanici
l1=4
l2=12
p1=1/4
p2=3/4
N=10000
s=0
for (i in 1:N)
{
x=p1*rexp(1,l1)+p2*rexp(1,l2)
s=s+x
}
expect=s/N
print(expect)
#A1. a)
Functie1 = function(lambda,p,n,m,k)
{
valori=k:m
Poisson=dpois(valori,lambda)
Geometric=dgeom(valori-k,p)
Binomial=dbinom(valori,n,p)
cat("Pentru valorile:",valori,"\n")
cat("Distributia Poisson:",Poisson,"\n")
cat("Distributia Geometrica:",Geometric,"\n")
cat("Distributia Binomiala:", Binomial,"\n")
}
lambda=3.5
p=0.2
n=10
m=5
k=2
Functie1(lambda,p,n,m,k)
#A1. b)
Functie2 = function(lambda,p,n,m,k)
{
valori=k:m
Poisson=dpois(valori,lambda)
Geometric=dgeom(valori-k,p)
Binomial=dbinom(valori,n,p)
plot(valori,Poisson,type="l",col="blue",xlab="valori",ylab="probabilitati",main="Functii de masa")
lines(valori,Geometric,type="l",col="red")
lines(valori,Binomial,type="l",col="green")
legend("bottomleft",legend=c("Poisson","Geometric","Binomial"),col=c("blue","red","green"),lty=1,lwd=2)
}
lambda=3.5
p=0.2
n=10
m=5
k=2
Functie2(lambda,p,n,m,k)
#A1. c)
Functie3= function(lambda)
{
k0=0
while(ppois(k0,lambda) <= (1-(1/10^6)))
k0=k0+1
return (k0)
}
lambda=2
k0=Functie3(lambda)
cat("valoarea este: ",k0)
#A2. a)
Functie_a=function(fisier)
{
date=read.csv(fisier)
esantion1=date$P
esantion2=date$S
frec_abs1=as.vector(table(esantion1))
frec_abs2=as.vector(table(esantion2))
frec_rel1=as.vector(table(esantion1)/length(esantion1))
frec_rel2=as.vector(table(esantion2)/length(esantion2))
media1=mean(esantion1)
media2=mean(esantion2)
print("Frecvente absolute esantion1:")
print(frec_abs1)
print("Frecvente absolute esantion2:")
print(frec_abs2)
print("Frecvente relative esantion1:")
print(frec_rel1)
print("Frecvente relative esantion2:")
print(frec_rel2)
print("Media esantion1:")
print(media1)
print("Media esantion2:")
print(media2)
}
Functie_a("note_PS.csv")
setwd("C:/Users/mihai/Documents/R-PS/TemaA")
#A1. a)
Functie1 = function(lambda,p,n,m,k)
{
valori=k:m
Poisson=dpois(valori,lambda)
Geometric=dgeom(valori-k,p)
Binomial=dbinom(valori,n,p)
cat("Pentru valorile:",valori,"\n")
cat("Distributia Poisson:",Poisson,"\n")
cat("Distributia Geometrica:",Geometric,"\n")
cat("Distributia Binomiala:", Binomial,"\n")
}
lambda=3.5
p=0.2
n=10
m=5
k=2
Functie1(lambda,p,n,m,k)
#A1. b)
Functie2 = function(lambda,p,n,m,k)
{
valori=k:m
Poisson=dpois(valori,lambda)
Geometric=dgeom(valori-k,p)
Binomial=dbinom(valori,n,p)
plot(valori,Poisson,type="l",col="blue",xlab="valori",ylab="probabilitati",main="Functii de masa")
lines(valori,Geometric,type="l",col="red")
lines(valori,Binomial,type="l",col="green")
legend("bottomleft",legend=c("Poisson","Geometric","Binomial"),col=c("blue","red","green"),lty=1,lwd=2)
}
lambda=3.5
p=0.2
n=10
m=5
k=2
Functie2(lambda,p,n,m,k)
#A1. c)
Functie3= function(lambda)
{
k0=0
while(ppois(k0,lambda) <= (1-(1/10^6)))
k0=k0+1
return (k0)
}
lambda=2
k0=Functie3(lambda)
cat("valoarea este: ",k0)
#A2. a)
Functie_a=function(fisier)
{
date=read.csv(fisier)
esantion1=date$P
esantion2=date$S
frec_abs1=as.vector(table(esantion1))
frec_abs2=as.vector(table(esantion2))
frec_rel1=as.vector(table(esantion1)/length(esantion1))
frec_rel2=as.vector(table(esantion2)/length(esantion2))
media1=mean(esantion1)
media2=mean(esantion2)
print("Frecvente absolute esantion1:")
print(frec_abs1)
print("Frecvente absolute esantion2:")
print(frec_abs2)
print("Frecvente relative esantion1:")
print(frec_rel1)
print("Frecvente relative esantion2:")
print(frec_rel2)
print("Media esantion1:")
print(media1)
print("Media esantion2:")
print(media2)
}
Functie_a("note_PS.csv")
# A2. b)
Functie_b=function(fisier,esantion3)
{
date=read.csv(fisier,header=TRUE)
esantion=date[[esantion3]]
q1=quantile(esantion,0.25)
q3=quantile(esantion,0.75)
iqr=q3-q1
lim_inf=q1-1.5*iqr
lim_sup=q3+1.5*iqr
newesantion=esantion[esantion>=lim_inf & esantion<=lim_sup]
hist(newesantion,breaks=seq(1,10,by=1),xlab=esantion3,ylab="Frecventa")
}
Functie_b("note_PS.csv","P")
#A1. a)
Functie1 = function(lambda,p,n,m,k)
{
valori=k:m
Poisson=dpois(valori,lambda)
Geometric=dgeom(valori-k,p)
Binomial=dbinom(valori,n,p)
cat("Pentru valorile:",valori,"\n")
cat("Distributia Poisson:",Poisson,"\n")
cat("Distributia Geometrica:",Geometric,"\n")
cat("Distributia Binomiala:", Binomial,"\n")
}
lambda=3.5
p=0.2
n=10
m=5
k=2
Functie1(lambda,p,n,m,k)
#A1. b)
Functie2 = function(lambda,p,n,m,k)
{
valori=k:m
Poisson=dpois(valori,lambda)
Geometric=dgeom(valori-k,p)
Binomial=dbinom(valori,n,p)
plot(valori,Poisson,type="l",col="blue",xlab="valori",ylab="probabilitati",main="Functii de masa")
lines(valori,Geometric,type="l",col="red")
lines(valori,Binomial,type="l",col="green")
legend("bottomleft",legend=c("Poisson","Geometric","Binomial"),col=c("blue","red","green"),lty=1,lwd=2)
}
lambda=3.5
p=0.2
n=10
m=5
k=2
Functie2(lambda,p,n,m,k)
#A1. c)
Functie3= function(lambda)
{
k0=0
while(ppois(k0,lambda) <= (1-(1/10^6)))
k0=k0+1
return (k0)
}
lambda=2
k0=Functie3(lambda)
cat("valoarea este: ",k0)
#A2. a)
Functie_a=function(fisier)
{
date=read.csv(fisier)
esantion1=date$P
esantion2=date$S
frec_abs1=as.vector(table(esantion1))
frec_abs2=as.vector(table(esantion2))
frec_rel1=as.vector(table(esantion1)/length(esantion1))
frec_rel2=as.vector(table(esantion2)/length(esantion2))
media1=mean(esantion1)
media2=mean(esantion2)
print("Frecvente absolute esantion1:")
print(frec_abs1)
print("Frecvente absolute esantion2:")
print(frec_abs2)
print("Frecvente relative esantion1:")
print(frec_rel1)
print("Frecvente relative esantion2:")
print(frec_rel2)
print("Media esantion1:")
print(media1)
print("Media esantion2:")
print(media2)
}
Functie_a("note_PS.csv")
# A2. b)
Functie_b=function(fisier,esantion3)
{
date=read.csv(fisier,header=TRUE)
esantion=date[[esantion3]]
q1=quantile(esantion,0.25)
q3=quantile(esantion,0.75)
iqr=q3-q1
lim_inf=q1-1.5*iqr
lim_sup=q3+1.5*iqr
newesantion=esantion[esantion>=lim_inf & esantion<=lim_sup]
hist(newesantion,breaks=seq(1,10,by=1),xlab=esantion3,ylab="Frecventa")
}
Functie_b("note_PS.csv","P")
